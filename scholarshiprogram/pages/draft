import Link from 'next/link';
import Image from 'next/image';
import React, { useState } from 'react';
import ProfileNavbar from '/components/profileNavbar';
import styles from '../components/home.module.css';
import { CircularProgress, Card, CardBody, CardFooter, Chip } from "@nextui-org/react";
import CircularProgressCard from '@/components/CircleProgress';
import { useSession } from 'next-auth/react';

export default function Profile() {
  const [value, setValue] = React.useState(0);
  const [selectedAppliedList, setSelectedAppliedList] = useState(true);
  const [selectedHistory, setSelectedHistory] = useState(false);
  const [selectedSemester, setSelectedSemester] = useState('1/2023');
  const [totalHours, setTotalHours] = useState(0);
  const { data, status } = useSession();

  const [semesters, setSemesters] = useState([
    {
      semester: [
        {
          term: '1/2022',
          totalHours: 60,
        },
        {
          term: '2/2022',
          totalHours: 20,
        },
      ],
      works: [
        {
          id: 1,
          image: '/workpost.png',
          title: 'Work 1',
          hours: '60 hours',
          appliedList: [
            { status: 'Accepted', icon: '/applied.png' },
            { status: 'Pending', icon: '/not_applied.png' },
            { status: 'Rejected', icon: '/not_applied.png' },
          ],
          history: [
            { status: 'Completed', icon: '/completed.png' },
            { status: 'Incompleted', icon: '/not_applied.png' },
          ],
        },
      ],
    },
    {
      semester: [
        {
          term: '1/2023',
          totalHours: 60,
        },
        {
          term: '2/2023',
          totalHours: 20,
        },
      ],
      works: [
        {
          id: 2,
          image: '/workpost.png',
          title: 'Work 1',
          hours: '60 hours',
          appliedList: [
            { status: 'Accepted', icon: '/applied.png' },
            { status: 'Pending', icon: '/not_applied.png' },
            { status: 'Rejected', icon: '/not_applied.png' },
          ],
          history: [
            { status: 'Completed', icon: '/completed.png' },
            { status: 'Incompleted', icon: '/not_applied.png' },
          ],
        },
      ],
    },
  ]);


  React.useEffect(() => {
    // Update the value whenever the selected semester changes
    setValue(0); // Reset value to 0 when the semester changes

    const selectedSemesterData = semesters.find(
      (semester) => semester.semester.some((term) => term.term === selectedSemester)
    );

    if (selectedSemesterData) {
      const termTotalHours = selectedSemesterData.semester.find((term) => term.term === selectedSemester).totalHours;

      const interval = setInterval(() => {
        setValue((v) => (v >= termTotalHours ? termTotalHours : v + 10)); // Increment value up to totalHours
      }, 500);

      return () => clearInterval(interval);
    }
  }, [selectedSemester, semesters]);

  return (
    <>
      <ProfileNavbar />
      <div className={styles.line} />
      <h1 className={styles['textProfile']}>PROFILE</h1>
      <div className={styles['home-page']}>
        <div className={styles['profileSection']}>
          <div className={styles['profilePictureContainer']}>
            <Image src="/profile_pic.png" className={styles['profilePicture']} alt="Profile Picture" width={100} height={100} />
          </div>
          <div className={styles['profileContent']}>
            <div className={styles['infoBox']}>
              <div className={styles['infoTitle']}>Anwar</div>
            </div>
            <div className={styles['infoBox']}>
              <div className={styles['infoTitle']}>u6215106@au.edu</div>
            </div>
          </div>
        </div>
        <table className={styles['box']}></table>
        <div className={styles['detailSection']}>
          <div className={styles['topDetail']}>
            <div className={styles['title-container']}>
              <label htmlFor="semester">Select Semester:</label>
              <select
                id="semester"
                onChange={(e) => setSelectedSemester(e.target.value)}
                value={selectedSemester}
              >
                  {semesters.map((semesterData) =>
                semesterData.semester.map((term) => (
                  <option key={term.term} value={term.term}>
                    {term.term}
                  </option>
                ))
              )}
              </select>
            </div>
            <div className={styles['hourContent']}>Scholarship work hours </div>
            <div>
              <CircularProgressCard value={value} totalHours={totalHours} />
            </div>
          </div>
          <div className={styles['bottomDetail']}>
            <div className={styles['title-container']}>
              <h3
                className={selectedAppliedList ? styles['active-title'] : ''}
                onClick={() => {
                  setSelectedAppliedList(true);
                  setSelectedHistory(false);
                }}
              >
                Applied List
              </h3>
              <h3
                className={!selectedAppliedList ? styles['active-title'] : ''}
                onClick={() => {
                  setSelectedAppliedList(false);
                  setSelectedHistory(true);
                }}
              >
                History
              </h3>
            </div>
            {selectedAppliedList ? (
              <div className={styles['details-info']}>
                <div className={styles['qualification-info']}>
                {selectedSemesterData &&
                  selectedSemesterData.works &&
                  selectedSemesterData.works[0] &&
                  selectedSemesterData.works[0].appliedList &&
                  selectedSemesterData.works[0].appliedList.map((entry, index) => (
                    <div key={index} className={styles['work-entry']}>
                      <div className={styles['work-image']}>
                        <img src={selectedSemesterData.works[0].image} alt={`Work ${index + 1}`} />
                      </div>
                      <div className={styles['work-title']}>
                        <div>{selectedSemesterData.works[0].title}</div>
                        <div>{selectedSemesterData.works[0].hours}</div>
                      </div>
                      <div className={styles['work-status']}>{entry.status}</div>
                    </div>
                  ))}
                </div>
              </div>
            ) : (
              <div className={styles['details-info']}>
                {selectedSemesterData &&
                  selectedSemesterData.works &&
                  selectedSemesterData.works[0] &&
                  selectedSemesterData.works[0].history &&
                  selectedSemesterData.works[0].history.map((entry, index) => (
                  <div key={index} className={styles['work-entry']}>
                    <div className={styles['work-image']}>
                      <img src={selectedSemesterData.works[0].image} alt={`Work ${index + 1}`} />
                    </div>
                    <div className={styles['work-title']}>
                      <div>{selectedSemesterData.works[0].title}</div>
                      <div>{selectedSemesterData.works[0].hours}</div>
                    </div>
                    <div className={styles['work-status']}>{entry.status}</div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
}
